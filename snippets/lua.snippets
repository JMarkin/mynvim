snippet #!
    #!/usr/bin/env lua
    $1
snippet local
    local ${1:x} = ${0:1}
snippet fun
    function ${1:fname}(${2:...})
        ${0:-- body}
    end
snippet for
    for ${1:i}=${2:1},${3:10} do
        ${0:print(i)}
    end
snippet forp
    for ${1:i},${2:v} in pairs(${3:table_name}) do
        ${0:-- body}
    end
snippet fori
    for ${1:i},${2:v} in ipairs(${3:table_name}) do
        ${0:-- body}
    end
snippet if
    if ${1:condition} then
        ${2:-- body}
    end
snippet ife
    if ${1:condition} then
        ${2:-- if condition}
    else
        ${0:-- else}
    end
snippet elif
    elseif ${1:condition} then
        ${0:--body}
snippet repeat
    repeat
        ${1:--body}
    until ${0:condition}
snippet while
    while ${1:condition} do
        ${0:--body}
    end
snippet print
    print("${1:string}")
snippet im
    import "${1:import file}"

snippet nullls
    -- https://github.com/jose-elias-alvarez/null-ls.nvim/blob/main/doc/BUILTINS.md
    require("plugins.nullls").enable(nil, nil, nil)

snippet pylint
    -- https://github.com/jose-elias-alvarez/null-ls.nvim/blob/main/doc/BUILTINS.md
    require("plugins.nullls").enable({"pylint", "mypy", "bandit", "djlint"}, {"isort", "yapf", "docformatter", "taplo"})

snippet flake8
    -- https://github.com/jose-elias-alvarez/null-ls.nvim/blob/main/doc/BUILTINS.md
    require("plugins.nullls").enable({"flake8", "mypy", "bandit", "djlint"}, {"isort", "yapf", "docformatter", "taplo"})

snippet stylua
    -- https://github.com/jose-elias-alvarez/null-ls.nvim/blob/main/doc/BUILTINS.md
    require("plugins.nullls").enable(nil, {"stylua", "taplo"})

snippet rustfmt
    -- https://github.com/jose-elias-alvarez/null-ls.nvim/blob/main/doc/BUILTINS.md
    require("plugins.nullls").enable(nil, {"rustfmt", "taplo"})

snippet neogen
    require("neogen").setup({
        enabled = true,
        input_after_comment = true,
        snippet_engine = "luasnip",
        languages = {
            python = {
                template = {
                    annotation_convention = "reST",
                },
            },
        },
    })

snippet tags
    require("gentags").enable()

snippet tags_python
    require("gentags").enable("python")

snippet django
    vim.filetype.add({
        extension = {
            html = "htmldjango",
            htm = "htmldjango",
        }
    })

snippet tests
    require("neotest").setup({})

snippet pytest
    require("neotest").setup({
      adapters = {
        require("neotest-python")({
            dap = { justMyCode = false },
            args = {"--log-level", "DEBUG"},
            runner = "pytest",
        })
      }
    })

snippet unittest
    require("neotest").setup({
      adapters = {
        require("neotest-python")({
            dap = { justMyCode = false },
            args = {"--log-level", "DEBUG"},
            runner = "pytest",
        })
      }
    })

snippet db
    vim.g.db = "postgresql://postgres:postgres@localhost:5432/postgres"

